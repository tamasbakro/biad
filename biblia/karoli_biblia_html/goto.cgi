#!/bin/sh

# Bible, (c) Daniel Drotos 1995,96
#
# This CGI script is used to find reqested
# chapter in the WWW Bible
# ----------------------------------------
# 

# First of all producing HTTP header so everything
# generated by this script can be shown in the browser

cat <<EOF
Content-type: text/html

EOF

# Function to include FORM into the output
##########################################

PutForm()
{
  sed -n 's/ CHECKED//
          /<form/,/<\/form/p' goto.html |\
  gawk '/NAME="konyv"/ && /VALUE="'$KONYV'"/ {
    gsub(/>/, " CHECKED>")
  }
  /NAME="fejezet"/ {
    gsub(/VALUE="1"/, "VALUE=\"'$FEJEZET'\"")
  }
  /NAME="vers"/ {
    gsub(/VALUE="1"/, "VALUE=\"'$VERS'\"")
  }
  {print}'
}

# Making some administration: setting up variables, etc.

exportPATH=/bin:/usr/bin:/usr/local/bin:/stuff/bin

PID=$$ # Whow, it's 2 chars longer...

# Let's do all the works in directory of the Bible

# Parameters from the goto FORM

if [ "$1" != "dani" ]; then
  case `hostname` in
    pigmy)
       if [ "$REQUEST_METHOD" = "POST" ]; then
         export QUERY_STRING=`cat`
       fi
       KONYV=`cgipars konyv|fly2html`
       FEJEZET=`cgipars fejezet`
       VERS=`cgipars vers`
       DEBUG=`cgipars debug`
    ;;

    *)
      eval `cgiparse -init`
      KONYV=`cgiparse -quiet -value konyv|fly2html`
      FEJEZET=`cgiparse -quiet -value fejezet`
      VERS=`cgiparse -quiet -value vers`
      DEBUG=`cgiparse -quiet -value debug`
    ;;
  esac
else
  KONYV=$1
  FEJEZET=$2
  VERS=$3
  DEBUG=$4
fi

# Examining existence of the directory of the requested book

if [ -d o/$KONYV ]; then
# Book is in o
  DIR=o/$KONYV
elif [ -d uj/$KONYV ]; then
# Book is in uj
  DIR=uj/$KONYV
else
# Book does not exist, producing error report and include the complete
# goto FORM into the answer, and then go out...
# Note: this error shoud never happen, so it is _very_ serious!
cat <<EOF
<html><head><title>Hiba: nincs ilyen (${KONYV}) könyv</title></head>
<body><h1>Hiba</h1>
Nincs ilyen (<b>${KONYV}</b>) könyv.
<hr>
EOF
#sed -n '/<form/,/<\/form/p' goto.html
PutForm
cat <<EOF
<hr></body></html>
EOF
exit
fi

# Book directory exists, name of it is in DIR, going on and calculating
# name of the chapter file

CHAPS=`ls $DIR/chap???.html|wc -l`
CHAPNUM=`printf "%03d" $FEJEZET`
CHAPNAME=chap${CHAPNUM}.html
CHAP=${DIR}/${CHAPNAME}

# Cheking the existence of the requested chapter

if [ -f $CHAP ]; then
CHAPOK="yes"
else
CHAPOK="no"
fi

#DEBUG
if [ "$DEBUG" = "yes" ]; then
cat <<EOF
<hr>Debug info: debug= $DEBUG
<p>Requested:
<p>book= $KONYV<br>
chapter= $FEJEZET, $CHAPNUM, $CHAPNAME; exist= $CHAPOK<br>
paragraph= $VERS
<p>directory: $DIR<br>
chapters: $CHAPS
<p>End of debug info<hr>
EOF
fi
#/DEBUG

# If chapter does not exist, making error report including full of
# the goto FORM

if [ "$CHAPOK" = "no" ]; then
cat <<EOF
<html><head><title>Hiba: a kért fejezet nem létezik</title></head>
<body><h1>A kért fejezet nem létezik</h1>
Az általad kért fejezet a <b>${FEJEZET}</b> volt, de ilyen fejezet a
<i>${KONYV}</i> könyvben nem létezik, ott ugyanis csak <b>${CHAPS}</b>
fejezet van.
<hr>
EOF
#sed -n '/<form/,/<\/form/p' goto.html
PutForm
cat <<EOF
<hr></body></html>
EOF
exit
fi

# Book and chapter are OK, checking number of paragraphs in the
# requested chapter

#REFNAME="${KONYV}_${CHAPNUM}_${VERS}"
REFNAME="para_${VERS}"

PARNUM=`grep '<A NAME=' $CHAP | wc -l`

if grep $REFNAME $CHAP >/dev/null
then
  PAROK="yes"
else
  PAROK="no"
fi

#DEBUG
if [ "$DEBUG" = "yes" ]; then
cat <<EOF
<hr>Debug info:
<p>Number of paragraphs in ${CHAP}= $PARNUM
<p>Requested: $REFNAME
<p>Exist: $PAROK
<p>End of debug info<hr>
EOF
fi
#/DEBUG


# Producing output
##################

# First writing out header part of the chapter file

echo "<base href=\"http://mazsola.iit.uni-miskolc.hu/biblia/${DIR}/\">"
sed -n '1,/<H1>/p' $CHAP

# Second, including jumping point (link) to the requested
# paragraph, or a warning message if it does not exist.

if [ "$PAROK" = "yes" ]; then
cat <<EOF
<a href="${CHAPNAME}#${REFNAME}">A kért vers: <b>${VERS}</b></a>
EOF
#cat <<EOF
#<a href="#${REFNAME}">A kért vers: <b>${VERS}</b></a>
#EOF
else
cat <<EOF
<b>Figyelmeztetés:</b> A kért vers (<b>${VERS}</b>) nem létezik!
<p>A <i>${KONYV}</i> kõnyvnek ebben a fejezetében csak
<b>${PARNUM}</b> vers van.
EOF
fi

# Writing out trailer part of the chapter

sed -n '/<H2>/,/<HR>/p' $CHAP

# Including the goto FORM

#sed -n '/<form/,/<\/form/p' goto.html
#PutForm

# That's all :-)

cat <<EOF
<hr></body></html>
EOF

# End of bib.goto
